name: Run Wallabot

on:
  schedule:
    - cron: '*/30 * * * *'  # Runs every 30 minutes
  workflow_dispatch:  # Allows manual triggering

jobs:
  run-wallabot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      # Restore offers.pickle from cache
      - name: Restore offers cache
        uses: actions/cache@v3
        with:
          path: offers.pickle
          # Use a date-based key that changes daily (prevents stale data)
          key: offers-${{ github.repository }}-${{ github.ref }}-${{ github.run_id }}
          restore-keys: |
            offers-${{ github.repository }}-${{ github.ref }}-
            offers-${{ github.repository }}-
            offers-
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Update credentials in config.py
        env:
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}
        run: |
          sed -i "s/username = '.*'/username = '$EMAIL_USERNAME'/" config.py
          sed -i "s/password = '.*'/password = '$EMAIL_PASSWORD'/" config.py
          sed -i "s/receiver = '.*'/receiver = '$EMAIL_RECEIVER'/" config.py
      
      # Create empty pickle file if it doesn't exist
      - name: Ensure pickle file exists
        run: |
          if [ ! -f offers.pickle ]; then
            echo "Creating new offers.pickle file"
            touch offers.pickle
          fi
      
      - name: Run Wallabot
        run: python wallabot.py --headless
        
      # Upload logs as artifacts for inspection
      - name: Upload logs
        uses: actions/upload-artifact@v2
        with:
          name: wallabot-logs
          path: wallabot.log
          retention-days: 7